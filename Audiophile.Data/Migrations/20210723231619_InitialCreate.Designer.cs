// <auto-generated />
using System;
using Audiophile.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Audiophile.Data.Migrations
{
    [DbContext(typeof(AudiophileContext))]
    [Migration("20210723231619_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Audiophile.Domain.Entities.Gallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FirstId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SecondId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ThirdId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FirstId");

                    b.HasIndex("SecondId");

                    b.HasIndex("ThirdId");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Desktop")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tablet")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Include", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Item")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Includes");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Other", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Others");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Features")
                        .HasColumnType("TEXT");

                    b.Property<int>("GalleryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("New")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Gallery", b =>
                {
                    b.HasOne("Audiophile.Domain.Entities.Image", "First")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Audiophile.Domain.Entities.Image", "Second")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.HasOne("Audiophile.Domain.Entities.Image", "Third")
                        .WithMany()
                        .HasForeignKey("ThirdId");

                    b.Navigation("First");

                    b.Navigation("Second");

                    b.Navigation("Third");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Include", b =>
                {
                    b.HasOne("Audiophile.Domain.Entities.Product", null)
                        .WithMany("Includes")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Other", b =>
                {
                    b.HasOne("Audiophile.Domain.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("Audiophile.Domain.Entities.Product", null)
                        .WithMany("Others")
                        .HasForeignKey("ProductId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Product", b =>
                {
                    b.HasOne("Audiophile.Domain.Entities.Gallery", "Gallery")
                        .WithMany()
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Audiophile.Domain.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gallery");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Audiophile.Domain.Entities.Product", b =>
                {
                    b.Navigation("Includes");

                    b.Navigation("Others");
                });
#pragma warning restore 612, 618
        }
    }
}
